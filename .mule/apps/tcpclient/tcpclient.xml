<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:ftp="http://www.mulesoft.org/schema/mule/ee/ftp" xmlns:ajax="http://www.mulesoft.org/schema/mule/ajax" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:wmq="http://www.mulesoft.org/schema/mule/ee/wmq" xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/current/mule-tcp.xsd
http://www.mulesoft.org/schema/mule/ee/wmq http://www.mulesoft.org/schema/mule/ee/wmq/current/mule-wmq-ee.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ajax http://www.mulesoft.org/schema/mule/ajax/current/mule-ajax.xsd
http://www.mulesoft.org/schema/mule/ee/ftp http://www.mulesoft.org/schema/mule/ee/ftp/current/mule-ftp-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
	<global-property name="visa.tcp.port" value="5010" doc:name="Global Property"/>
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <tcp:connector name="TCP" validateConnections="true" sendBufferSize="1024" receiveBufferSize="1024" receiveBacklog="0" clientSoTimeout="10000" serverSoTimeout="10000" socketSoLinger="0" doc:name="TCP">
        <tcp:xml-eof-protocol/>
    </tcp:connector>
    <flow name="inputsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/" doc:name="HTTP"/>
        <http:static-resource-handler resourceBase="${app.home}/docroot" doc:name="HTTP Static Resource Handler"/>
    </flow>
    <flow name="mainFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/tratarForm" doc:name="HTTP"/>
        <component class="br.ufsc.das.Tratamento" doc:name="Tratamento"/>
        <set-session-variable variableName="cartaoCredito" value="#[payload]" mimeType="text/plain" doc:name="Grava Cartao de Credito em Vari&#225;vel"/>
        <choice doc:name="Decidi Cart&#227;o de Cr&#233;dito">
            <when expression="#[payload.CardNumber.substring(0, 1) == '4' &amp;&amp; payload.CardNumber.length() == 16]">
                <flow-ref name="visaFlow" doc:name="Visa Flow"/>
            </when>
            <when expression="#[Integer.parseInt(payload.CardNumber.substring(0,2)) &gt;= 51 &amp;&amp; Integer.parseInt(payload.CardNumber.substring(0,2)) &lt;= 55 &amp;&amp; payload.CardNumber.length() == 16]">
                <flow-ref name="mastercardFlow" doc:name="Mastercard Flow"/>
            </when>
            <otherwise>
                <component class="br.ufsc.das.Exceptions.LancarExcecaoCartaoNaoReconhecido" doc:name="Cart&#227;o N&#227;o Reconhecido"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-payload value="Ocorreu um erro processando requis&#227;o -&gt; #[exception.cause]" encoding="UTF-8" mimeType="text/plain" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="mastercardFlow">
        <component class="br.ufsc.das.MastercardTCPClient" doc:name="Mastercard TCP Client"/>
        <object-to-string-transformer mimeType="text/plain" doc:name="Object to String" encoding="UTF-8"/>
    </flow>
    <flow name="visaFlow">
        <set-payload value="PAY#[System.getProperty('line.separator')] " mimeType="text/plain" doc:name="Comando PAY"/>
        <tcp:outbound-endpoint exchange-pattern="request-response" host="localhost" port="${visa.tcp.port}" connector-ref="TCP" responseTimeout="10000" doc:name="TCP"/>
        <byte-array-to-string-transformer mimeType="text/plain" doc:name="Byte Array to String"/>
        <choice doc:name="Choice">
            <when expression="#[payload == &quot;OK&quot;]">
                <set-payload value="#[sessionVars.cartaoCredito.CardNumber]#[System.getProperty('line.separator')]" doc:name="Numero Cartao de Credito"/>
                <tcp:outbound-endpoint exchange-pattern="request-response" host="localhost" port="${visa.tcp.port}" connector-ref="TCP" responseTimeout="10000" doc:name="TCP"/>
                <byte-array-to-string-transformer mimeType="text/plain" doc:name="Byte Array to String"/>
                <choice doc:name="Choice">
                    <when expression="#[payload == &quot;OK&quot;]">
                        <set-payload value="#[sessionVars.cartaoCredito.CardName]#[System.getProperty('line.separator')]" doc:name="Nome Cartao de Credito"/>
                        <tcp:outbound-endpoint exchange-pattern="request-response" host="localhost" port="${visa.tcp.port}" connector-ref="TCP" responseTimeout="10000" doc:name="TCP"/>
                        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
                        <choice doc:name="Choice">
                            <when expression="#[payload == &quot;OK&quot;]">
                                <set-payload value="#[sessionVars.cartaoCredito.ExpirationDate]#[System.getProperty('line.separator')]" doc:name="Data de Expira&#231;&#227;o do Cart&#227;o"/>
                                <tcp:outbound-endpoint exchange-pattern="request-response" host="localhost" port="${visa.tcp.port}" connector-ref="TCP" responseTimeout="10000" doc:name="TCP"/>
                                <byte-array-to-string-transformer doc:name="Byte Array to String"/>
                                <choice doc:name="Choice">
                                    <when expression="#[payload == &quot;OK&quot;]">
                                        <set-payload value="#[sessionVars.cartaoCredito.TransactionValue]#[System.getProperty('line.separator')]" doc:name="Valor da Transa&#231;&#227;o"/>
                                        <tcp:outbound-endpoint exchange-pattern="request-response" host="localhost" port="${visa.tcp.port}" connector-ref="TCP" responseTimeout="10000" doc:name="TCP"/>
                                        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
                                        <choice doc:name="Choice">
                                            <when expression="#[payload == &quot;OK&quot;]">
                                                <set-payload value="COMMIT#[System.getProperty('line.separator')] " doc:name="Comando COMMIT"/>
                                                <tcp:outbound-endpoint exchange-pattern="request-response" host="localhost" port="${visa.tcp.port}" connector-ref="TCP" responseTimeout="10000" doc:name="TCP" encoding="UTF-8" mimeType="text/plain"/>
                                                <byte-array-to-string-transformer doc:name="Byte Array to String" encoding="UTF-8" mimeType="text/plain"/>
                                                <logger message="#[payload]" level="INFO" doc:name="Logger"/>
                                                <scripting:component doc:name="Extrai C&#243;digo da Transa&#231;&#227;o">
                                                    <scripting:script engine="Groovy"><![CDATA[String[] str = payload.split(System.getProperty('line.separator'))

return str[1]]]></scripting:script>
                                                </scripting:component>
                                            </when>
                                            <otherwise>
                                                <component class="br.ufsc.das.Exceptions.VisaExceptions" doc:name="Exception"/>
                                            </otherwise>
                                        </choice>
                                    </when>
                                    <otherwise>
                                        <component class="br.ufsc.das.Exceptions.VisaExceptions" doc:name="Exception"/>
                                    </otherwise>
                                </choice>
                            </when>
                            <otherwise>
                                <component class="br.ufsc.das.Exceptions.VisaExceptions" doc:name="Exception"/>
                            </otherwise>
                        </choice>
                    </when>
                    <otherwise>
                        <component class="br.ufsc.das.Exceptions.VisaExceptions" doc:name="Exception"/>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <component class="br.ufsc.das.Exceptions.VisaExceptions" doc:name="Exception"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-payload value="Ocorreu um erro processando requis&#227;o -&gt; #[exception.cause]" encoding="UTF-8" mimeType="text/plain" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
</mule>
